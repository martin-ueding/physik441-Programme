// Copyright © 2013 Martin Ueding <dev@martin-ueding.de>
// Licensed under The MIT License

/**
 \mainpage physik441-09
 \author Martin Ueding <dev@martin-ueding.de>
 \copyright MIT License

 \tableofcontents

 \section kompilieren Kompilieren und Ausführen

 Dieses Programm ist in C 99 geschrieben und kann mit folgenden Kommandos
 kompiliert und ausgeführt werden:
 \code
 make dep
 make
 ./main
 ./plot
 \endcode

 \section ausgabe Ausgabe

 Ausgabe des Programms selbst (\c main):

 \include out/output-main.txt

 Ausgabe des Plottens (\c plot):

 \include out/output-plot.txt

 \section aufgaben Aufgaben

 \subsection aufgabe1 Aufgabe 1

 Ich lese die Daten aus der Datei ein, mit matrix_load(). Diese speichere ich
 dann direkt wieder mit matrix_save() ohne Angabe der Größe, um es mit
 matplotlib als Diagram plotten zu können:

 \image html out/1-raw.png

 Die Daten sind also Rauschen im Hintergrund und in jeder Zeile und Spalte eine
 größere Zahl. Das Problem der Maximierung der Spur ist wohl ein sehr komplexes
 Problem. Da die Daten allerdings so einfach gegeben sind, komme ich mir meinem
 einfachen Algorithmus aus. Ich schaue für jede Spalte, in welcher Zeile die
 größte Zahl steht und tausche diese Zeile dann dort hin.

 Danach sieht die Matrix so aus:

 \image html out/1-minimized.png

 Die Lösung, die ich mit GNU Octave und dessen \c rref Funktion erhalten habe, ist:

 \code
 -0.164899
  0.965085
  0.032495
  0.376828
 -0.692531
  0.419645
 -0.716338
 -0.715967
 -0.499678
 -0.172070
  0.731785
 -0.998223
 -0.220316
 -0.485642
 -0.340696
 -0.224472
  0.340282
 -0.126607
 -0.220524
 -0.405750
 \endcode

 Mein Programm liefert dieses Ergebnis:

 \include out/1-result.txt
 */

// vim: ft=c spell spelllang=de
